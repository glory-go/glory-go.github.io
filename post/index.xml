<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Hello Glory Title</title>
    <link>https://glory-go.github.io/post/</link>
    <description>Recent content in Posts on Hello Glory Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 Jun 2021 23:36:08 +0800</lastBuildDate><atom:link href="https://glory-go.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Quickstart</title>
      <link>https://glory-go.github.io/quickstart/</link>
      <pubDate>Tue, 08 Jun 2021 23:36:08 +0800</pubDate>
      
      <guid>https://glory-go.github.io/quickstart/</guid>
      <description>Glory —— 一款轻量级微服务框架 1. release note 2. 功能介绍 2.1 总体介绍 glory框架为一款轻量级微服务框架，你可以使用它快速开发你的服务端。
  在协议方面：glory框架提供grpc（client端和server端）、http（server端）脚手架，你可以通过几行配置和几行代码快速开启一个grpc或http服务。
glory框架还提供具备服务治理能力的glory协议，通过glory协议暴露的服务，在整个rpc过程中，框架可提供服务注册、服务发现、集群策略、负载均衡等服务治理能力，并且支持基于glory协议的流式rpc。
  在配置方面：glory框架提供统一化的配置服务，你只需要在main文件同级目录config文件夹下定义glory.yml，在配置文件内按照约定格式写入配置信息，在引入框架后执行时，框架会自动读入配置文件，并开启所需服务。
你也可以选择从阿里云 nacos 配置中心拉取当前服务所需配置。
  日志：glory框架提供日志服务，你可以在配置文件中定义自己需要的日志记录方式。支持命令行、文件、远程（基于elastic、阿里云sls）的日志收集。
  链路追踪：glory框架提供适配于 grpc 的链路追踪服务，你可以选择将服务调用链路上报至阿里云链路追踪平台进行监控和错误追溯。
  数据上报：glory框架提供基于promethus的数据上报服务，你可以在配置文件中定义自己需要的数据上报方式，支持基于promethus-pushgateway的推式数据上报，以及传统拉式数据上报。
  第三方工具常用sdk支持：glory框架提供mysql、redis、mongodb、oss、rabbitmq等常见工具的sdk封装，开发者可以在配置中引入服务，使用框架提供的sdk进行快速开发。
  2.2 各模块详细介绍 //这部分待不断补充
  统一配置服务
 配置中心拉取    单个特定协议Service启动
  开启grpc服务
 grpc-server rpc-client    开启http服务
 http-server  http filter链实现      Triple (dubbo3) 协议和网络模型接入</description>
    </item>
    
    <item>
      <title>Samples</title>
      <link>https://glory-go.github.io/samples/</link>
      <pubDate>Tue, 08 Jun 2021 23:36:08 +0800</pubDate>
      
      <guid>https://glory-go.github.io/samples/</guid>
      <description>samples</description>
    </item>
    
  </channel>
</rss>
